{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE9e02CF6486DB0a8782DF6757BC1D89F8Ec7C1F7",
    "txHash": "0x2c3c63eef91c694e9410446b2eda454c1231d0902de86865496d61bc5a084565"
  },
  "proxies": [
    {
      "address": "0xA5090741B7705890A453e717e03aB078FC6D8263",
      "txHash": "0x22f6c00a7bb82a7a3da770dd2b1b794670b5955731554037df5285090bd2a352",
      "kind": "transparent"
    },
    {
      "address": "0x773b78Fb817a08a9D09918BB8A11Ceef2B7B7c97",
      "txHash": "0x89d66495b31084856ec98361319ce68694929febcac1565446ddfb0ee038ef9e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cba368af67885fcd8db2811c5b4020f439b4897ca5d92118bdc05acbc67a118d": {
      "address": "0x42b1b69CdfC16ADCb47eDF8Bc84eb8c9b791aaF0",
      "txHash": "0x7333f641a6aa575e0fb7c81c4291bac978ab7944defe4b813b656cb40d1a76bb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:465"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "label": "_trustedForwarder",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:16"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC2771ContextUpgradeable",
            "src": "contracts/ERC2771ContextUpgradeable.sol:72"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_tokenIds",
            "offset": 0,
            "slot": "302",
            "type": "t_struct(Counter)3158_storage",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:18"
          },
          {
            "label": "eventManagerAddr",
            "offset": 0,
            "slot": "303",
            "type": "t_address",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:20"
          },
          {
            "label": "nftMetaDataURL",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:33"
          },
          {
            "label": "isHoldingEventNFT",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:35"
          },
          {
            "label": "countOfParticipation",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:37"
          },
          {
            "label": "eventNftAttributes",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_bytes32,t_string_storage)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:39"
          },
          {
            "label": "remainingEventNftCount",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:41"
          },
          {
            "label": "eventSecretPhrases",
            "offset": 0,
            "slot": "309",
            "type": "t_mapping(t_uint256,t_bytes32)",
            "contract": "MintNFT",
            "src": "contracts/MintNFT.sol:43"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_string_storage)": {
            "label": "mapping(bytes32 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bytes32)": {
            "label": "mapping(uint256 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3158_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a63ae7380daa06a914b6edce8072e95cef5cc390dacf298074f7673dbfbd81fa": {
      "address": "0x4AA2fDBF51926018F45a2901f4fC7c0594522AE8",
      "txHash": "0x28e7f5159dcfab285dbadec08e555c4ea3cc19aeab7cc54a40177d7253f069ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_eventRecordIds",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(Counter)3158_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:27"
          },
          {
            "label": "_groupIds",
            "offset": 0,
            "slot": "102",
            "type": "t_struct(Counter)3158_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:28"
          },
          {
            "label": "groups",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_struct(Group)4099_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:30"
          },
          {
            "label": "eventRecords",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_struct(EventRecord)4112_storage)dyn_storage",
            "contract": "EventManager",
            "src": "contracts/Event.sol:31"
          },
          {
            "label": "ownGroupIds",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:33"
          },
          {
            "label": "eventIdsByGroupId",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:34"
          },
          {
            "label": "groupIdByEventId",
            "offset": 0,
            "slot": "107",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "EventManager",
            "src": "contracts/Event.sol:35"
          },
          {
            "label": "mintNFTAddr",
            "offset": 0,
            "slot": "108",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:38"
          },
          {
            "label": "relayerAddr",
            "offset": 0,
            "slot": "109",
            "type": "t_address",
            "contract": "EventManager",
            "src": "contracts/Event.sol:40"
          },
          {
            "label": "mtxPrice",
            "offset": 0,
            "slot": "110",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:42"
          },
          {
            "label": "maxMintLimit",
            "offset": 0,
            "slot": "111",
            "type": "t_uint256",
            "contract": "EventManager",
            "src": "contracts/Event.sol:44"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(EventRecord)4112_storage)dyn_storage": {
            "label": "struct EventManager.EventRecord[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(Group)4099_storage)dyn_storage": {
            "label": "struct EventManager.Group[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(uint256 => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Counter)3158_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EventRecord)4112_storage": {
            "label": "struct EventManager.EventRecord",
            "members": [
              {
                "label": "eventRecordId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "date",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "useMtx",
                "type": "t_bool",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(Group)4099_storage": {
            "label": "struct EventManager.Group",
            "members": [
              {
                "label": "groupId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "ownerAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
